pipeline {
    agent { label 'agent-1' }
    environment {
        PROJECT = 'expense'
        COMPONENT = 'backend'
    }

    options {
        disableConcurrentBuilds()
        timeout(time: 5, unit: 'MINUTES')
    }

    
    // stages {
        // stage('Read version' ) {
        //     steps {
        //         script {
        //             def packageJson = readJSON file: 'package.json'
        //             appVersion = packageJson.version
        //             echo "Version is: $appVersion"
        //         }

        //     }
        // }
    // stages {
    //     stage('dependents') {
    //         steps {
    //             script {
    //                 sh """
    //                 npm install
    //                 """
    //             }
    //         }
    //     }
    stages {
        stage('docker build') {
            steps {
                script {
                    sh """
                    docker build -t lakshmikanth333/dockerimage:3.0 .
                    """
                }
            }
        }
    //     stage('push') {
    //         steps {
    //             script {
    //                 sh """
    //                 docker push
    //                 """
    //             }
    //         }
    //     }
    // }
    post {
        success {
            echo "pipeline succeeded"
        }
        failure {
            echo "pipeline failed"
        }
        always {
            echo "doesnt matter too me, i alwys show up phew wheew"
            deletedir()
        }
    }
}


